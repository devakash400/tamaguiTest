import { createThemeBuilder } from "@tamagui/theme-builder";
import { componentThemeDefinitions } from "./componentThemeDefinitions";
import { masks } from "./masks";
import { palettes } from "./palettes";
import { shadows } from "./shadows";
import { maskOptions, templates } from "./templates";
import { darkColors, lightColors } from "./tokens";
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
var colorThemeDefinition = function(colorName) {
  return [
    {
      parent: "light",
      palette: colorName,
      template: "colorLight"
    },
    {
      parent: "dark",
      palette: colorName,
      template: "base"
    }
  ];
}, themesBuilder = createThemeBuilder().addPalettes(palettes).addTemplates(templates).addMasks(masks).addThemes({
  light: {
    template: "base",
    palette: "light",
    nonInheritedValues: _object_spread({}, lightColors, shadows.light)
  },
  dark: {
    template: "base",
    palette: "dark",
    nonInheritedValues: _object_spread({}, darkColors, shadows.dark)
  }
}).addChildThemes({
  orange: colorThemeDefinition("orange"),
  yellow: colorThemeDefinition("yellow"),
  green: colorThemeDefinition("green"),
  blue: colorThemeDefinition("blue"),
  purple: colorThemeDefinition("purple"),
  pink: colorThemeDefinition("pink"),
  red: colorThemeDefinition("red")
}).addChildThemes({
  alt1: _object_spread({
    mask: "soften"
  }, maskOptions.alt),
  alt2: _object_spread({
    mask: "soften2"
  }, maskOptions.alt),
  active: {
    mask: "soften3",
    skip: {
      color: 1
    }
  }
}).addChildThemes(componentThemeDefinitions, {}), themes = themesBuilder.build();
export {
  themes
};
//# sourceMappingURL=themes-new.js.map
